@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bienvenido <br /> @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            @* <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button> *@
                <div class="d-flex justify-content-center">
                    <button id="logout" type="submit" class="btn btn-link text-dark">Logout</button>
                </div>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-black" id="register" asp-area="Identity" asp-page="/Account/Register">Registro</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-black" id="login" asp-area="Identity" asp-page="/Account/Login">Ingreso</a>
    </li>
}
</ul>
